@model Domain.Entities.ShippingDetails

@{
    ViewBag.Title = "BookStore: order form";
}

<h2>Make order</h2>
<p>Please, input your information</p>

@* not display style when copying in Site.css *@
<style>
    .field-validation-error {
        color: #F00;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #f00;
        background-color: #fee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #f00;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    <h3>Information</h3>
    <div class="form-group">
        <label>Your name:</label>
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    </div>

    <h3>Shipping adress</h3>
    foreach (var property in ViewData.ModelMetadata.Properties)
    {
        if (property.PropertyName != "Name" && property.PropertyName != "GiftWrap")
        {
            <div class="form-group">
                <label>@(property.DisplayName ?? property.PropertyName):</label>
                @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
            </div>
        }
    }
    @*<div class="form-group">
        <label>Street:</label>
        @Html.TextBoxFor(x => x.Street, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>City:</label>
        @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Country:</label>
        @Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
    </div>*@

    <h3>Options</h3>
    <div class="form-group">
        <label>
            @Html.EditorFor(x => x.GiftWrap)
            Make gift wrap ?
        </label>
    </div>

    <div class="text-center">
        <input class="btn btn-primary" type="submit" value="Make order!" />
    </div>
}